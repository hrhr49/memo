<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on hrhr49 blog</title><link>https://hrhr49.github.io/memo/tags/docker/</link><description>Recent content in docker on hrhr49 blog</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © hrhr49; all rights reserved.</copyright><lastBuildDate>Sat, 19 Sep 2020 17:55:26 +0900</lastBuildDate><atom:link href="https://hrhr49.github.io/memo/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Dockerの使い方</title><link>https://hrhr49.github.io/memo/posts/docker/</link><pubDate>Sat, 19 Sep 2020 17:55:26 +0900</pubDate><guid>https://hrhr49.github.io/memo/posts/docker/</guid><description>Dockerメモ Dockerのインストール どうやら、種類がいろいろあってdocker-ceはdockerの公式がサポートしていて、 docker.ioはUbuntuがサポートしているみたい。 docker.ioに関しては以下のようにしてインストールできた。
1sudo apt install docker.io Dockerに合わせてdocker-composeも一緒にインストールしておくと便利。 これを入れておくと、コンテナの構成管理などが便利らしい。
1sudo apt isntall docker-compose DockerでHello World 以下のコマンドで hello-world のDockerイメージからコンテナを起動できる。 もしこのイメージがまだローカルにダウンロードされていない場合、 Docker Hubからイメージをダウンロードした後に実行される。
1docker run hello-world このコマンドを実行すると以下のようなメッセージが表示される。
1Hello from Docker! 2This message shows that your installation appears to be working correctly. 3... 4略 簡単なDockerイメージを作る 自分用のdotfiles(各種設定ファイル)をインストールするスクリプトをコンテナ内で実行するための Dockerfileを作って動かしてみたのでその時のメモ。 (インストールスクリプトといっても、各種設定ファイルを、 ホームディレクトリなどにシンボリックリンク張るだけですが&amp;hellip;)
以下のURLにおいてある。(注意：将来的に内容が変わっている可能性あり。)
https://github.com/hrhr49/dotfiles/blob/master/Dockerfile
補足： Dockerfileを使わずに、Dockerコンテナからイメージを作成することも可能。 しかし、この方法だと設定に何を行ったかがわかりづらくなってしまうので今回はこの方法を採用しなかった。
Dockerfileを作る 最終的に以下のような内容のものになった。
1FROMubuntu:20.0423# インタラクティブな選択画面を使用しない4ENV DEBIAN_FRONTEND=noninteractive 5 6# 先にtzdataを入れないと、タイムゾーンの選択画面が出てしまう(Ubuntu18.04以降)7# https://qiita.com/yagince/items/deba267f789604643bab8RUN apt-get -y update &amp;amp;&amp;amp; \ 9 apt-get -y install \ 10 tzdata1112# Build Environment13RUN apt-get -y update &amp;amp;&amp;amp; \ 14apt-get -y install \ 15 language-pack-ja-base \ 16 language-pack-ja \ 17 sudo1819# Utility20RUN apt-get -y update &amp;amp;&amp;amp; \ 21apt-get -y install \ 22 python3 \ 23 wget \ 24 curl \ 25 zip \ 26 unzip \ 27 git2829# 日本語の文字化けなどを回避30RUN locale-gen en_US.</description></item></channel></rss>